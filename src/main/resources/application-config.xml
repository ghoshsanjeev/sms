<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"> 
   		

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:annotation-config />
	<aop:aspectj-autoproxy />


	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:/${env:local}/mail.properties</beans:value>
				<beans:value>classpath:/${env:local}/database.properties
				</beans:value>
				<beans:value>classpath:/${env:local}/jira.properties</beans:value>
				<beans:value>classpath:/${env:local}/confluence.properties
				</beans:value>
				<beans:value>classpath:/${env:local}/pmo.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:array>
				<beans:value>classpath:/locale/JiraMessages</beans:value>
				<beans:value>classpath:/locale/ConfluenceMessages</beans:value>
				<beans:value>classpath:/locale/TougouMessages</beans:value>
			</beans:array>
		</beans:property>
		<!-- <beans:property name="basename" value="classpath:/locale/JiraMessages" 
			/> -->
	</beans:bean>


	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>

	<!-- SET default mail properties -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<!-- SMTP settings -->
		<beans:property name="host" value="${mail.host}" />
		<beans:property name="port" value="${mail.port}" />
		<beans:property name="username" value="${mail.username}" />
		<beans:property name="password" value="${mail.password}" />
		<beans:property name="javaMailProperties">
			<!-- additional properties specific to JavaMail -->
			<beans:props>
				<beans:prop key="mail.transport.protocol">${mail.transport.protocol}</beans:prop>
				<beans:prop key="mail.smtp.auth">${mail.smtp.auth}</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.hds.tougou" />

	<beans:bean id="taskTypeMap" class="java.util.HashMap"
		scope="prototype">
		<beans:constructor-arg>
			<beans:map key-type="java.lang.String" value-type="java.lang.Boolean">
				<beans:entry key="Management Task" value="false" />
				<beans:entry key="Solutions Lab Documentation Project"
					value="false" />
				<beans:entry key="Management Sub-Task" value="true" />
				<beans:entry key="Formal Work Product" value="true" />
				<beans:entry key="Informal Work Product" value="true" />
			</beans:map>
		</beans:constructor-arg>
	</beans:bean>


	<beans:bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<!-- Next value is the full qualified name of the static setter including 
			method name -->
		<beans:property name="targetClass"
			value="com.hds.tougou.pmo.domain.ProjectTask" />
		<beans:property name="targetMethod" value="setIssueTypesMap" />
		<beans:property name="arguments">
			<beans:list>
				<!-- This is the bean name that holds database-settings.properties -->
				<beans:ref bean="taskTypeMap" />
			</beans:list>
		</beans:property>
	</beans:bean>


<beans:import resource="cache-config.xml"/>
<beans:import resource="database-config.xml"/>
	
</beans:beans>
